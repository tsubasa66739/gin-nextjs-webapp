// Code generated by MockGen. DO NOT EDIT.
// Source: service/note_service.go
//
// Generated by this command:
//
//	mockgen -source service/note_service.go -package service -destination service/note_service_mock.go
//

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	schema "github.com/tsubasa66739/gin-nextjs-webapp/controller/schema"
	model "github.com/tsubasa66739/gin-nextjs-webapp/repository/model"
	gomock "go.uber.org/mock/gomock"
)

// MockNoteService is a mock of NoteService interface.
type MockNoteService struct {
	ctrl     *gomock.Controller
	recorder *MockNoteServiceMockRecorder
	isgomock struct{}
}

// MockNoteServiceMockRecorder is the mock recorder for MockNoteService.
type MockNoteServiceMockRecorder struct {
	mock *MockNoteService
}

// NewMockNoteService creates a new mock instance.
func NewMockNoteService(ctrl *gomock.Controller) *MockNoteService {
	mock := &MockNoteService{ctrl: ctrl}
	mock.recorder = &MockNoteServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNoteService) EXPECT() *MockNoteServiceMockRecorder {
	return m.recorder
}

// CreateNote mocks base method.
func (m *MockNoteService) CreateNote(req *schema.PostNoteReq) (model.TrnNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNote", req)
	ret0, _ := ret[0].(model.TrnNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNote indicates an expected call of CreateNote.
func (mr *MockNoteServiceMockRecorder) CreateNote(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNote", reflect.TypeOf((*MockNoteService)(nil).CreateNote), req)
}

// GetNote mocks base method.
func (m *MockNoteService) GetNote(id uint) (model.TrnNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNote", id)
	ret0, _ := ret[0].(model.TrnNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNote indicates an expected call of GetNote.
func (mr *MockNoteServiceMockRecorder) GetNote(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNote", reflect.TypeOf((*MockNoteService)(nil).GetNote), id)
}

// GetNoteList mocks base method.
func (m *MockNoteService) GetNoteList() ([]model.TrnNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNoteList")
	ret0, _ := ret[0].([]model.TrnNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNoteList indicates an expected call of GetNoteList.
func (mr *MockNoteServiceMockRecorder) GetNoteList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNoteList", reflect.TypeOf((*MockNoteService)(nil).GetNoteList))
}

// UpdateNote mocks base method.
func (m *MockNoteService) UpdateNote(id uint, req *schema.PutNoteReq) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNote", id, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateNote indicates an expected call of UpdateNote.
func (mr *MockNoteServiceMockRecorder) UpdateNote(id, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNote", reflect.TypeOf((*MockNoteService)(nil).UpdateNote), id, req)
}
